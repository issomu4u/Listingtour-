#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Listningtour.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mylistingtour")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertPaypaldata(Paypaldata instance);
    partial void UpdatePaypaldata(Paypaldata instance);
    partial void DeletePaypaldata(Paypaldata instance);
    partial void InsertPublishedProperty(PublishedProperty instance);
    partial void UpdatePublishedProperty(PublishedProperty instance);
    partial void DeletePublishedProperty(PublishedProperty instance);
    partial void InsertStep(Step instance);
    partial void UpdateStep(Step instance);
    partial void DeleteStep(Step instance);
    partial void InsertSupport(Support instance);
    partial void UpdateSupport(Support instance);
    partial void DeleteSupport(Support instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserinfo(Userinfo instance);
    partial void UpdateUserinfo(Userinfo instance);
    partial void DeleteUserinfo(Userinfo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MylistingtourConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Paypaldata> Paypaldatas
		{
			get
			{
				return this.GetTable<Paypaldata>();
			}
		}
		
		public System.Data.Linq.Table<PublishedProperty> PublishedProperties
		{
			get
			{
				return this.GetTable<PublishedProperty>();
			}
		}
		
		public System.Data.Linq.Table<Step> Steps
		{
			get
			{
				return this.GetTable<Step>();
			}
		}
		
		public System.Data.Linq.Table<Support> Supports
		{
			get
			{
				return this.GetTable<Support>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Userinfo> Userinfos
		{
			get
			{
				return this.GetTable<Userinfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImgId;
		
		private string _thumbnails;
		
		private string _PhotoPath;
		
		private int _UserId;
		
		private System.Nullable<int> _StepId;
		
		private EntityRef<Step> _Step;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImgIdChanging(int value);
    partial void OnImgIdChanged();
    partial void OnthumbnailsChanging(string value);
    partial void OnthumbnailsChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStepIdChanging(System.Nullable<int> value);
    partial void OnStepIdChanged();
    #endregion
		
		public Image()
		{
			this._Step = default(EntityRef<Step>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImgId
		{
			get
			{
				return this._ImgId;
			}
			set
			{
				if ((this._ImgId != value))
				{
					this.OnImgIdChanging(value);
					this.SendPropertyChanging();
					this._ImgId = value;
					this.SendPropertyChanged("ImgId");
					this.OnImgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnails", DbType="VarChar(50)")]
		public string thumbnails
		{
			get
			{
				return this._thumbnails;
			}
			set
			{
				if ((this._thumbnails != value))
				{
					this.OnthumbnailsChanging(value);
					this.SendPropertyChanging();
					this._thumbnails = value;
					this.SendPropertyChanged("thumbnails");
					this.OnthumbnailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="VarChar(MAX)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._PhotoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepId", DbType="Int")]
		public System.Nullable<int> StepId
		{
			get
			{
				return this._StepId;
			}
			set
			{
				if ((this._StepId != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStepIdChanging(value);
					this.SendPropertyChanging();
					this._StepId = value;
					this.SendPropertyChanged("StepId");
					this.OnStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Image", Storage="_Step", ThisKey="StepId", OtherKey="Stepid", IsForeignKey=true)]
		public Step Step
		{
			get
			{
				return this._Step.Entity;
			}
			set
			{
				Step previousValue = this._Step.Entity;
				if (((previousValue != value) 
							|| (this._Step.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Step.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Step.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._StepId = value.Stepid;
					}
					else
					{
						this._StepId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Step");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Image", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paypaldata")]
	public partial class Paypaldata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaypalId;
		
		private string _Cmd;
		
		private string _business;
		
		private string _no_shipping;
		
		private string @__return;
		
		private string _cancel_return;
		
		private string _notify_url;
		
		private string _currency_code;
		
		private string _item_name;
		
		private string _amount;
		
		private string _actionURL;
		
		private int _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaypalIdChanging(int value);
    partial void OnPaypalIdChanged();
    partial void OnCmdChanging(string value);
    partial void OnCmdChanged();
    partial void OnbusinessChanging(string value);
    partial void OnbusinessChanged();
    partial void Onno_shippingChanging(string value);
    partial void Onno_shippingChanged();
    partial void On_returnChanging(string value);
    partial void On_returnChanged();
    partial void Oncancel_returnChanging(string value);
    partial void Oncancel_returnChanged();
    partial void Onnotify_urlChanging(string value);
    partial void Onnotify_urlChanged();
    partial void Oncurrency_codeChanging(string value);
    partial void Oncurrency_codeChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OnactionURLChanging(string value);
    partial void OnactionURLChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public Paypaldata()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaypalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaypalId
		{
			get
			{
				return this._PaypalId;
			}
			set
			{
				if ((this._PaypalId != value))
				{
					this.OnPaypalIdChanging(value);
					this.SendPropertyChanging();
					this._PaypalId = value;
					this.SendPropertyChanged("PaypalId");
					this.OnPaypalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmd", DbType="NVarChar(MAX)")]
		public string Cmd
		{
			get
			{
				return this._Cmd;
			}
			set
			{
				if ((this._Cmd != value))
				{
					this.OnCmdChanging(value);
					this.SendPropertyChanging();
					this._Cmd = value;
					this.SendPropertyChanged("Cmd");
					this.OnCmdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business", DbType="NVarChar(MAX)")]
		public string business
		{
			get
			{
				return this._business;
			}
			set
			{
				if ((this._business != value))
				{
					this.OnbusinessChanging(value);
					this.SendPropertyChanging();
					this._business = value;
					this.SendPropertyChanged("business");
					this.OnbusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_shipping", DbType="NVarChar(MAX)")]
		public string no_shipping
		{
			get
			{
				return this._no_shipping;
			}
			set
			{
				if ((this._no_shipping != value))
				{
					this.Onno_shippingChanging(value);
					this.SendPropertyChanging();
					this._no_shipping = value;
					this.SendPropertyChanged("no_shipping");
					this.Onno_shippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[@return]", Storage="__return", DbType="NVarChar(MAX)")]
		public string _return
		{
			get
			{
				return this.@__return;
			}
			set
			{
				if ((this.@__return != value))
				{
					this.On_returnChanging(value);
					this.SendPropertyChanging();
					this.@__return = value;
					this.SendPropertyChanged("_return");
					this.On_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancel_return", DbType="NVarChar(MAX)")]
		public string cancel_return
		{
			get
			{
				return this._cancel_return;
			}
			set
			{
				if ((this._cancel_return != value))
				{
					this.Oncancel_returnChanging(value);
					this.SendPropertyChanging();
					this._cancel_return = value;
					this.SendPropertyChanged("cancel_return");
					this.Oncancel_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notify_url", DbType="NVarChar(MAX)")]
		public string notify_url
		{
			get
			{
				return this._notify_url;
			}
			set
			{
				if ((this._notify_url != value))
				{
					this.Onnotify_urlChanging(value);
					this.SendPropertyChanging();
					this._notify_url = value;
					this.SendPropertyChanged("notify_url");
					this.Onnotify_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_code", DbType="NVarChar(MAX)")]
		public string currency_code
		{
			get
			{
				return this._currency_code;
			}
			set
			{
				if ((this._currency_code != value))
				{
					this.Oncurrency_codeChanging(value);
					this.SendPropertyChanging();
					this._currency_code = value;
					this.SendPropertyChanged("currency_code");
					this.Oncurrency_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="NVarChar(MAX)")]
		public string item_name
		{
			get
			{
				return this._item_name;
			}
			set
			{
				if ((this._item_name != value))
				{
					this.Onitem_nameChanging(value);
					this.SendPropertyChanging();
					this._item_name = value;
					this.SendPropertyChanged("item_name");
					this.Onitem_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="NVarChar(MAX)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionURL", DbType="NVarChar(MAX)")]
		public string actionURL
		{
			get
			{
				return this._actionURL;
			}
			set
			{
				if ((this._actionURL != value))
				{
					this.OnactionURLChanging(value);
					this.SendPropertyChanging();
					this._actionURL = value;
					this.SendPropertyChanged("actionURL");
					this.OnactionURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Paypaldata", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Paypaldatas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Paypaldatas.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublishedProperty")]
	public partial class PublishedProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _Guid;
		
		private int _UserId;
		
		private string _PublishedUrl;
		
		private int _StepId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPublishedUrlChanging(string value);
    partial void OnPublishedUrlChanged();
    partial void OnStepIdChanging(int value);
    partial void OnStepIdChanged();
    #endregion
		
		public PublishedProperty()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PublishedUrl
		{
			get
			{
				return this._PublishedUrl;
			}
			set
			{
				if ((this._PublishedUrl != value))
				{
					this.OnPublishedUrlChanging(value);
					this.SendPropertyChanging();
					this._PublishedUrl = value;
					this.SendPropertyChanged("PublishedUrl");
					this.OnPublishedUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepId", DbType="Int NOT NULL")]
		public int StepId
		{
			get
			{
				return this._StepId;
			}
			set
			{
				if ((this._StepId != value))
				{
					this.OnStepIdChanging(value);
					this.SendPropertyChanging();
					this._StepId = value;
					this.SendPropertyChanged("StepId");
					this.OnStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PublishedProperty", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PublishedProperties.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PublishedProperties.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}

        public Step Step { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Step")]
	public partial class Step : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stepid;
		
		private string _PropertyAddress;
		
		private string _Zipcode;
		
		private string _Area;
		
		private string _Propertytype;
		
		private string _Typesofhome;
		
		private string _Taxes;
		
		private string _Status;
		
		private string _Bedrooms;
		
		private string _Price;
		
		private string _Washrooms;
		
		private string _PropertyDescription;
		
		private System.Nullable<bool> _Issave;
		
		private System.Nullable<System.DateTime> _Createddate;
		
		private System.Nullable<int> _UserId;
		
		private string _YoutubeLink;
		
		private string _MLS;
		
		private EntitySet<Image> _Images;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepidChanging(int value);
    partial void OnStepidChanged();
    partial void OnPropertyAddressChanging(string value);
    partial void OnPropertyAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnPropertytypeChanging(string value);
    partial void OnPropertytypeChanged();
    partial void OnTypesofhomeChanging(string value);
    partial void OnTypesofhomeChanged();
    partial void OnTaxesChanging(string value);
    partial void OnTaxesChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBedroomsChanging(string value);
    partial void OnBedroomsChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnWashroomsChanging(string value);
    partial void OnWashroomsChanged();
    partial void OnPropertyDescriptionChanging(string value);
    partial void OnPropertyDescriptionChanged();
    partial void OnIssaveChanging(System.Nullable<bool> value);
    partial void OnIssaveChanged();
    partial void OnCreateddateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateddateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnYoutubeLinkChanging(string value);
    partial void OnYoutubeLinkChanged();
    partial void OnMLSChanging(string value);
    partial void OnMLSChanged();
    #endregion
		
		public Step()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stepid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stepid
		{
			get
			{
				return this._Stepid;
			}
			set
			{
				if ((this._Stepid != value))
				{
					this.OnStepidChanging(value);
					this.SendPropertyChanging();
					this._Stepid = value;
					this.SendPropertyChanged("Stepid");
					this.OnStepidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyAddress", DbType="VarChar(MAX)")]
		public string PropertyAddress
		{
			get
			{
				return this._PropertyAddress;
			}
			set
			{
				if ((this._PropertyAddress != value))
				{
					this.OnPropertyAddressChanging(value);
					this.SendPropertyChanging();
					this._PropertyAddress = value;
					this.SendPropertyChanged("PropertyAddress");
					this.OnPropertyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(50)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(50)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propertytype", DbType="VarChar(50)")]
		public string Propertytype
		{
			get
			{
				return this._Propertytype;
			}
			set
			{
				if ((this._Propertytype != value))
				{
					this.OnPropertytypeChanging(value);
					this.SendPropertyChanging();
					this._Propertytype = value;
					this.SendPropertyChanged("Propertytype");
					this.OnPropertytypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typesofhome", DbType="VarChar(50)")]
		public string Typesofhome
		{
			get
			{
				return this._Typesofhome;
			}
			set
			{
				if ((this._Typesofhome != value))
				{
					this.OnTypesofhomeChanging(value);
					this.SendPropertyChanging();
					this._Typesofhome = value;
					this.SendPropertyChanged("Typesofhome");
					this.OnTypesofhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taxes", DbType="VarChar(50)")]
		public string Taxes
		{
			get
			{
				return this._Taxes;
			}
			set
			{
				if ((this._Taxes != value))
				{
					this.OnTaxesChanging(value);
					this.SendPropertyChanging();
					this._Taxes = value;
					this.SendPropertyChanged("Taxes");
					this.OnTaxesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bedrooms", DbType="VarChar(50)")]
		public string Bedrooms
		{
			get
			{
				return this._Bedrooms;
			}
			set
			{
				if ((this._Bedrooms != value))
				{
					this.OnBedroomsChanging(value);
					this.SendPropertyChanging();
					this._Bedrooms = value;
					this.SendPropertyChanged("Bedrooms");
					this.OnBedroomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Washrooms", DbType="VarChar(50)")]
		public string Washrooms
		{
			get
			{
				return this._Washrooms;
			}
			set
			{
				if ((this._Washrooms != value))
				{
					this.OnWashroomsChanging(value);
					this.SendPropertyChanging();
					this._Washrooms = value;
					this.SendPropertyChanged("Washrooms");
					this.OnWashroomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDescription", DbType="NVarChar(MAX)")]
		public string PropertyDescription
		{
			get
			{
				return this._PropertyDescription;
			}
			set
			{
				if ((this._PropertyDescription != value))
				{
					this.OnPropertyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PropertyDescription = value;
					this.SendPropertyChanged("PropertyDescription");
					this.OnPropertyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issave", DbType="Bit")]
		public System.Nullable<bool> Issave
		{
			get
			{
				return this._Issave;
			}
			set
			{
				if ((this._Issave != value))
				{
					this.OnIssaveChanging(value);
					this.SendPropertyChanging();
					this._Issave = value;
					this.SendPropertyChanged("Issave");
					this.OnIssaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Createddate
		{
			get
			{
				return this._Createddate;
			}
			set
			{
				if ((this._Createddate != value))
				{
					this.OnCreateddateChanging(value);
					this.SendPropertyChanging();
					this._Createddate = value;
					this.SendPropertyChanged("Createddate");
					this.OnCreateddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeLink", DbType="VarChar(MAX)")]
		public string YoutubeLink
		{
			get
			{
				return this._YoutubeLink;
			}
			set
			{
				if ((this._YoutubeLink != value))
				{
					this.OnYoutubeLinkChanging(value);
					this.SendPropertyChanging();
					this._YoutubeLink = value;
					this.SendPropertyChanged("YoutubeLink");
					this.OnYoutubeLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLS", DbType="VarChar(50)")]
		public string MLS
		{
			get
			{
				return this._MLS;
			}
			set
			{
				if ((this._MLS != value))
				{
					this.OnMLSChanging(value);
					this.SendPropertyChanging();
					this._MLS = value;
					this.SendPropertyChanged("MLS");
					this.OnMLSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Image", Storage="_Images", ThisKey="Stepid", OtherKey="StepId")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Step", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Steps.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Steps.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Step = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Step = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Support")]
	public partial class Support : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupportId;
		
		private string _Name;
		
		private string _Subject;
		
		private string _Email;
		
		private string _PhoneNo;
		
		private string _DescribeYourIssue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupportIdChanging(int value);
    partial void OnSupportIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnDescribeYourIssueChanging(string value);
    partial void OnDescribeYourIssueChanged();
    #endregion
		
		public Support()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupportId
		{
			get
			{
				return this._SupportId;
			}
			set
			{
				if ((this._SupportId != value))
				{
					this.OnSupportIdChanging(value);
					this.SendPropertyChanging();
					this._SupportId = value;
					this.SendPropertyChanged("SupportId");
					this.OnSupportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescribeYourIssue", DbType="NVarChar(MAX)")]
		public string DescribeYourIssue
		{
			get
			{
				return this._DescribeYourIssue;
			}
			set
			{
				if ((this._DescribeYourIssue != value))
				{
					this.OnDescribeYourIssueChanging(value);
					this.SendPropertyChanging();
					this._DescribeYourIssue = value;
					this.SendPropertyChanged("DescribeYourIssue");
					this.OnDescribeYourIssueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<bool> _IsEmailVerified;
		
		private string _ActivationKey;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<Paypaldata> _Paypaldatas;
		
		private EntitySet<PublishedProperty> _PublishedProperties;
		
		private EntitySet<Step> _Steps;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User4;
		
		private EntitySet<Userinfo> _Userinfos;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsEmailVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsEmailVerifiedChanged();
    partial void OnActivationKeyChanging(string value);
    partial void OnActivationKeyChanged();
    #endregion
		
		public User()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._Paypaldatas = new EntitySet<Paypaldata>(new Action<Paypaldata>(this.attach_Paypaldatas), new Action<Paypaldata>(this.detach_Paypaldatas));
			this._PublishedProperties = new EntitySet<PublishedProperty>(new Action<PublishedProperty>(this.attach_PublishedProperties), new Action<PublishedProperty>(this.detach_PublishedProperties));
			this._Steps = new EntitySet<Step>(new Action<Step>(this.attach_Steps), new Action<Step>(this.detach_Steps));
			this._User2 = default(EntityRef<User>);
			this._User4 = default(EntityRef<User>);
			this._Userinfos = new EntitySet<Userinfo>(new Action<Userinfo>(this.attach_Userinfos), new Action<Userinfo>(this.detach_Userinfos));
			this._User1 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if ((this._User1.HasLoadedOrAssignedValue || this._User3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailVerified", DbType="Bit")]
		public System.Nullable<bool> IsEmailVerified
		{
			get
			{
				return this._IsEmailVerified;
			}
			set
			{
				if ((this._IsEmailVerified != value))
				{
					this.OnIsEmailVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsEmailVerified = value;
					this.SendPropertyChanged("IsEmailVerified");
					this.OnIsEmailVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationKey", DbType="VarChar(36)")]
		public string ActivationKey
		{
			get
			{
				return this._ActivationKey;
			}
			set
			{
				if ((this._ActivationKey != value))
				{
					this.OnActivationKeyChanging(value);
					this.SendPropertyChanging();
					this._ActivationKey = value;
					this.SendPropertyChanged("ActivationKey");
					this.OnActivationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Image", Storage="_Images", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Paypaldata", Storage="_Paypaldatas", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Paypaldata> Paypaldatas
		{
			get
			{
				return this._Paypaldatas;
			}
			set
			{
				this._Paypaldatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PublishedProperty", Storage="_PublishedProperties", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<PublishedProperty> PublishedProperties
		{
			get
			{
				return this._PublishedProperties;
			}
			set
			{
				this._PublishedProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Step", Storage="_Steps", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Step> Steps
		{
			get
			{
				return this._Steps;
			}
			set
			{
				this._Steps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_User2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.User1 = null;
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.User1 = this;
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User1", Storage="_User4", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public User User4
		{
			get
			{
				return this._User4.Entity;
			}
			set
			{
				User previousValue = this._User4.Entity;
				if (((previousValue != value) 
							|| (this._User4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User4.Entity = null;
						previousValue.User3 = null;
					}
					this._User4.Entity = value;
					if ((value != null))
					{
						value.User3 = this;
					}
					this.SendPropertyChanged("User4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Userinfo", Storage="_Userinfos", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Userinfo> Userinfos
		{
			get
			{
				return this._Userinfos;
			}
			set
			{
				this._Userinfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_User1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.User2 = null;
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.User2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User1", Storage="_User3", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.User4 = null;
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.User4 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Paypaldatas(Paypaldata entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Paypaldatas(Paypaldata entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PublishedProperties(PublishedProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PublishedProperties(PublishedProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Steps(Step entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Steps(Step entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Userinfos(Userinfo entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Userinfos(Userinfo entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Userinfo")]
	public partial class Userinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Userinfoid;
		
		private string _Name;
		
		private string _City;
		
		private string _Email;
		
		private string _Zipcode;
		
		private string _Designation;
		
		private string _CellNo;
		
		private string _Brokerage;
		
		private string _OfficeAddress;
		
		private string _OfficeNo;
		
		private string _Website;
		
		private string _PhotoPath;
		
		private int _UserId;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _CompanyLogo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserinfoidChanging(int value);
    partial void OnUserinfoidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnBrokerageChanging(string value);
    partial void OnBrokerageChanged();
    partial void OnOfficeAddressChanging(string value);
    partial void OnOfficeAddressChanged();
    partial void OnOfficeNoChanging(string value);
    partial void OnOfficeNoChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMiddlenameChanging(string value);
    partial void OnMiddlenameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnCompanyLogoChanging(string value);
    partial void OnCompanyLogoChanged();
    #endregion
		
		public Userinfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userinfoid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Userinfoid
		{
			get
			{
				return this._Userinfoid;
			}
			set
			{
				if ((this._Userinfoid != value))
				{
					this.OnUserinfoidChanging(value);
					this.SendPropertyChanging();
					this._Userinfoid = value;
					this.SendPropertyChanged("Userinfoid");
					this.OnUserinfoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(50)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(50)")]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brokerage", DbType="VarChar(50)")]
		public string Brokerage
		{
			get
			{
				return this._Brokerage;
			}
			set
			{
				if ((this._Brokerage != value))
				{
					this.OnBrokerageChanging(value);
					this.SendPropertyChanging();
					this._Brokerage = value;
					this.SendPropertyChanged("Brokerage");
					this.OnBrokerageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeAddress", DbType="NVarChar(500)")]
		public string OfficeAddress
		{
			get
			{
				return this._OfficeAddress;
			}
			set
			{
				if ((this._OfficeAddress != value))
				{
					this.OnOfficeAddressChanging(value);
					this.SendPropertyChanging();
					this._OfficeAddress = value;
					this.SendPropertyChanged("OfficeAddress");
					this.OnOfficeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeNo", DbType="VarChar(50)")]
		public string OfficeNo
		{
			get
			{
				return this._OfficeNo;
			}
			set
			{
				if ((this._OfficeNo != value))
				{
					this.OnOfficeNoChanging(value);
					this.SendPropertyChanging();
					this._OfficeNo = value;
					this.SendPropertyChanged("OfficeNo");
					this.OnOfficeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(50)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="NVarChar(500)")]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._PhotoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="VarChar(50)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this.OnMiddlenameChanging(value);
					this.SendPropertyChanging();
					this._Middlename = value;
					this.SendPropertyChanged("Middlename");
					this.OnMiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="NVarChar(500)")]
		public string CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Userinfo", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Userinfos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Userinfos.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
